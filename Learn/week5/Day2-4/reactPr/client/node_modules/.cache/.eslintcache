[{"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\index.js":"1","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\App.js":"2","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Footer.js":"3","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Login.js":"4","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Header.js":"5","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\ReviewCreate.js":"6","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Review.js":"7","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\ReviewDetail.js":"8","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\ReviewUpdate.js":"9","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\app\\Store.js":"10","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\kakao\\kakaoCallback.js":"11","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\user\\SocialSignUp.js":"12","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\user\\SignUpForm.js":"13","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\user\\SignInForm.js":"14","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\data\\keyInfo.js":"15","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\review\\Create.js":"16","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\app\\reducer\\Data.js":"17","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\review\\Detail.js":"18","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\review\\Update.js":"19"},{"size":275,"mtime":1659488301047,"results":"20","hashOfConfig":"21"},{"size":1628,"mtime":1659509609812,"results":"22","hashOfConfig":"21"},{"size":623,"mtime":1659488300916,"results":"23","hashOfConfig":"21"},{"size":3093,"mtime":1659488300954,"results":"24","hashOfConfig":"21"},{"size":4325,"mtime":1659518483689,"results":"25","hashOfConfig":"21"},{"size":617,"mtime":1659515638068,"results":"26","hashOfConfig":"21"},{"size":9095,"mtime":1659488300973,"results":"27","hashOfConfig":"21"},{"size":726,"mtime":1659488301009,"results":"28","hashOfConfig":"21"},{"size":726,"mtime":1659488301028,"results":"29","hashOfConfig":"21"},{"size":185,"mtime":1659488301071,"results":"30","hashOfConfig":"21"},{"size":1594,"mtime":1659510321128,"results":"31","hashOfConfig":"21"},{"size":5071,"mtime":1659515637503,"results":"32","hashOfConfig":"21"},{"size":3668,"mtime":1659488301274,"results":"33","hashOfConfig":"21"},{"size":2581,"mtime":1659488301249,"results":"34","hashOfConfig":"21"},{"size":102,"mtime":1659518416476,"results":"35","hashOfConfig":"21"},{"size":3733,"mtime":1659488301181,"results":"36","hashOfConfig":"21"},{"size":355,"mtime":1659488301089,"results":"37","hashOfConfig":"21"},{"size":2522,"mtime":1659488301200,"results":"38","hashOfConfig":"21"},{"size":4370,"mtime":1659488301221,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a6nq0p",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\index.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\App.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Footer.js",["106"],[],"const Footer = () => {\r\n    return (\r\n        <footer className=\"text-muted py-5\">\r\n            <div className=\"container\">\r\n                <p className=\"float-end mb-1\">\r\n                    <a href=\"#\">Back to top</a>\r\n                </p>\r\n                <p className=\"mb-1\">Album example is © Bootstrap, but please download and customize it for yourself!</p>\r\n                <p className=\"mb-0\">New to Bootstrap? <a href=\"/\">Visit the homepage</a> or read our <a href=\"/docs/5.2/getting-started/introduction/\">getting started guide</a>.</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Login.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Header.js",["107","108","109","110","111","112"],[],"import { useEffect } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport kakaLoginButtonImg from \"./img/kakao_login_medium.png\";\r\nimport keyInfo from \"../src/data/keyInfo\"; // 카카오소셜연동.(1)\r\n\r\nconst Header = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n\r\n  useEffect(() => {\r\n    if (cookies.userData === undefined) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [cookies]);\r\n\r\n  //----------------- kakao oauth-----------------------------------\r\n\r\n  const REDIRECT_URI = \"http://localhost:3000/oauth/kakao/callback\";\r\n  const REST_API_KEY = keyInfo.restApi_kakao;\r\n  const KAKAO_AUTH_URI = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\r\n  //------------------------------------------------------------------------\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"collapse bg-dark\" id=\"navbarHeader\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-8 col-md-7 py-4\">\r\n              <h4 className=\"text-white\">About</h4>\r\n              <p className=\"text-muted\">\r\n                Add some information about the album below, the author, or any\r\n                other background context. Make it a few sentences long so folks\r\n                can pick up some informative tidbits. Then, link them off to\r\n                some social networking sites or contact information.\r\n              </p>\r\n            </div>\r\n            <div className=\"col-sm-4 offset-md-1 py-4\">\r\n              <h4 className=\"text-white\">Contact</h4>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <a href=\"#\" className=\"text-white\">\r\n                    Follow on Twitter\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\" className=\"text-white\">\r\n                    Like on Facebook\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\" className=\"text-white\">\r\n                    Email me\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n              <h4 className=\"text-white\">Info</h4>\r\n              {cookies.userData ? (\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => {\r\n                        removeCookie(\"userData\", { path: \"/\" });\r\n                        navigate(\"/\");\r\n                      }}\r\n                      style={{ marginBottom: \"5%\" }}\r\n                    >\r\n                      LogOut\r\n                    </button>\r\n                  </li>\r\n                  <li>\r\n                    <button className=\"btn btn-primary\">Info</button>\r\n                  </li>\r\n                </ul>\r\n              ) : (\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href={KAKAO_AUTH_URI}>\r\n                      <img src={kakaLoginButtonImg} />\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <button\r\n                      onClick={() => navigate(\"/\")}\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Login\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"navbar navbar-dark bg-dark shadow-sm\">\r\n        <div className=\"container\">\r\n          <a\r\n            href=\"/review/list\"\r\n            className=\"navbar-brand d-flex align-items-center\"\r\n          >\r\n            <strong>Movie Review</strong>\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarHeader\"\r\n            aria-controls=\"navbarHeader\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\ReviewCreate.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\Review.js",["113","114","115","116","117","118","119","120","121","122"],[],"// import reviewData from \"./data/review.json\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport url from \"./data/port.json\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n//Redux\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setData } from \"./app/reducer/Data\";\r\n\r\nconst Review = () => {\r\n\r\n    const dispatch = useDispatch(); //action을 사용하기위해 보내주는 역할\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [reviewData, setReviewData] = useState([]);\r\n\r\n    const [page, setPage] = useState({\r\n        page: 1,             //현재 보고있는 페이지 번호\r\n        totalPage: 0        //전체 페이지 수\r\n    });\r\n\r\n    useEffect(() => { //렌더링이 되었다면 1번만 실행되는곳.\r\n\r\n        getReviewData(page.page);\r\n\r\n    }, []);\r\n\r\n    const getReviewData = (page) => {\r\n        try {\r\n            axios.get(url.url + `/posts?page=${page}&perPage=6`, {\r\n                headers: {\r\n                    accessToken: cookies.userData.accessToken\r\n                }\r\n            }).then(res => {\r\n                // console.log(res);\r\n\r\n                setReviewData(res.data.posts);\r\n\r\n                setPage({\r\n                    page: page,\r\n                    totalPage: res.data.totalPage\r\n                });\r\n\r\n            }).catch(e => {\r\n                console.log(e);\r\n            });\r\n        } catch (e) {\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n\r\n    const onClickPagination = (page) => {\r\n        getReviewData(page);\r\n    }\r\n\r\n\r\n    //---------------------------delete-----------------------------------\r\n\r\n    const deleteReview = async (shortId) => {\r\n        return await axios.get(url.url + `/posts/${shortId}/delete`, {\r\n            headers: {\r\n                accessToken: cookies.userData.accessToken\r\n            }\r\n        })\r\n    }\r\n\r\n    const onClickDeleteButton = (shortId) => {\r\n        if (window.confirm('삭제 하시겠습니까?')) {\r\n            //예\r\n            deleteReview(shortId).then(res => {\r\n                let getNewDeleteAfterData = reviewData.filter(it => it.shortId !== shortId);\r\n                setReviewData(getNewDeleteAfterData);\r\n            })\r\n        } else {\r\n            //아니오.\r\n            return;\r\n        }\r\n    }\r\n    //--------------------------------------------------------------------\r\n\r\n    //----------------------------------update------------------------------\r\n\r\n    const onClickUpdateButton = (shortId) => {\r\n        dispatch(setData(shortId));\r\n        navigate(`/review/${shortId}/update`);\r\n    }\r\n\r\n\r\n    //--------------------------------------------------------------------\r\n\r\n\r\n    //------------------------------------detail---------------------------\r\n\r\n    const onClickDetailButton = (shortId) => {\r\n\r\n        navigate(`/review/${shortId}/detail`);\r\n\r\n    }\r\n\r\n    //---------------------------------------------------------------------\r\n\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"py-5 text-center container\">\r\n                <div className=\"row py-lg-5\">\r\n                    <div className=\"col-lg-6 col-md-8 mx-auto\">\r\n                        <h1 className=\"fw-light\">Movie</h1>\r\n                        <p className=\"lead text-muted\">리뷰하고 싶은 영화를 추가하고,\r\n                            별점을 주세요.<br />\r\n                            또한 삭제, 수정이 가능합니다.\r\n                        </p>\r\n                        <p>\r\n                            <button onClick={() => { navigate('/review/create') }}\r\n                                className=\"btn btn-primary my-2 m-1\">Create Review</button>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <div className=\"album py-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n\r\n                        {\r\n                            reviewData.map((it, index) => (\r\n                                <div className=\"col\" key={index}>\r\n                                    <div className=\"card shadow-sm\">\r\n                                        <div className=\"card-img-top\" style={{ textAlign: \"center\" }} >\r\n                                            <img className=\"bd-placeholder-img \" width=\"50%\"\r\n                                                height=\"225\" role=\"img\" src={it.img}\r\n                                                aria-label=\"Placeholder: Thumbnail\"\r\n                                                preserveAspectRatio=\"xMidYMid slice\"\r\n                                                focusable=\"false\" />\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title\" onClick={() => {\r\n                                                onClickDetailButton(it.shortId);\r\n                                            }}>{it.title}</h5>\r\n                                            <p className=\"card-text\">\r\n                                                {it.content.substring(0, ((it.content).length / 2))}\r\n                                                <a onClick={() => onClickDetailButton(it.shortId)} style={{ color: 'blue' }}>&nbsp;&nbsp;&nbsp;...상세보기</a>\r\n                                            </p>\r\n                                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                <div className=\"btn-group\">\r\n                                                    <button type=\"button\" onClick={() => {\r\n                                                        onClickDeleteButton(it.shortId);\r\n                                                    }} className=\"btn btn-sm btn-outline-secondary\">삭제</button>\r\n                                                    <button type=\"button\" onClick={() => {\r\n                                                        onClickUpdateButton(it.shortId);\r\n                                                    }} className=\"btn btn-sm btn-outline-secondary\">수정</button>\r\n                                                </div>\r\n                                                <small className=\"text-muted\">9 mins</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <nav aria-label=\"Page navigation example\" style={{ display: \"inline-block\" }}>\r\n                    <ul className=\"pagination\">\r\n                        {\r\n                            (page.page - 1) < 1 ? (<></>) : (<>\r\n                                <li className=\"page-item\">\r\n                                    <a className=\"page-link\" aria-label=\"Previous\"\r\n                                        onClick={() => onClickPagination(page.page - 1)}>\r\n                                        <span aria-hidden=\"true\">&laquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"page-item\">\r\n                                    <a className=\"page-link\"\r\n                                        onClick={() => onClickPagination(page.page - 1)}>\r\n                                        {page.page - 1}\r\n                                    </a>\r\n                                </li>\r\n                            </>)\r\n                        }\r\n\r\n                        <li className=\"page-item active\"><a className=\"page-link\" onClick={() => onClickPagination(page.page)}>{page.page}</a></li>\r\n                        {\r\n                            (page.page + 1) > page.totalPage ? (<></>) : (<>\r\n                                <li className=\"page-item\">\r\n                                    <a className=\"page-link\"\r\n                                        onClick={() => onClickPagination(page.page + 1)}>\r\n                                        {page.page + 1}\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"page-item\">\r\n                                    <a className=\"page-link\" aria-label=\"Next\"\r\n                                        onClick={() => onClickPagination(page.page + 1)}>\r\n                                        <span aria-hidden=\"true\">&raquo;</span>\r\n                                    </a>\r\n                                </li>\r\n                            </>)\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Review;","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\ReviewDetail.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\ReviewUpdate.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\app\\Store.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\kakao\\kakaoCallback.js",["123","124","125","126","127","128"],[],"import axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport url from \"../../data/port.json\";\r\n// import { User } from \"../../../../server/models\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n// 카카오소셜연동.(2)\r\nconst KakaoCallBack = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [cookiesAuth, setCookieAuth, removeCookieAuth] = useCookies([\"auth\"]);\r\n  const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n\r\n  //kakao에서 redirect 해준 code 가져오는 부분\r\n  const KAKAO_PARAMS = new URL(window.location.href).searchParams.get(\"code\");\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(KAKAO_PARAMS);\r\n\r\n    sendCode()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        if (res.data.login) {\r\n          // true면 로그인 돼있는 상태\r\n\r\n          setCookie(\"userData\", res.data, { path: \"/\" });\r\n          navigate(\"/review/list\");\r\n        } else {\r\n          // false면 회원가입 진행해야하는 상태\r\n          setCookie(\"auth\", res.data, { path: \"/\" });\r\n          navigate(\"/oauth/signUp\");\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        navigate(\"/\");\r\n      });\r\n  }, []); // deps=[]는 최초 렌더링 시에만 동작하도록 설정\r\n\r\n  // 카카오소셜연동.(3) : 해당 로컬 서버가 -> 카카오 서버에 요청\r\n  const sendCode = async () => {\r\n    return await axios.get(url.url + `/auth/kakao`, {\r\n      params: {\r\n        code: KAKAO_PARAMS,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport default KakaoCallBack;\r\n","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\user\\SocialSignUp.js",["129","130","131"],[],"import $ from \"jquery\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport port from \"./../../data/port.json\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst SocialSignUp = () => {\r\n  const [cookiesAuth, setCookieAuth, removeCookieAuth] = useCookies([\"auth\"]);\r\n\r\n  const emailRef = useRef();\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const [signUpData, setSignUpdata] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    rePassword: \"\",\r\n    name: \"\",\r\n  });\r\n\r\n  const onChangeSignUpData = (e) => {\r\n    setSignUpdata({\r\n      ...signUpData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(cookiesAuth.auth);\r\n\r\n    setSignUpdata({\r\n      ...signUpData,\r\n      email: cookiesAuth.auth.kakao_account.email,\r\n      name: cookiesAuth.auth.kakao_account.profile.nickname,\r\n    });\r\n  }, []);\r\n\r\n  const onClickSignUpButton = () => {\r\n    if (signUpData.email === \"\") {\r\n      alert(\"이메일을 입력해주세요.\");\r\n      emailRef.current.focus();\r\n      return;\r\n    }\r\n\r\n    if (signUpData.password === \"\") {\r\n      alert(\"비밀번호를 입력해주세요.\");\r\n      $(\"#password\").focus();\r\n      return;\r\n    }\r\n\r\n    if (signUpData.rePassword === \"\") {\r\n      alert(\"비밀번호 확인을 입력해주세요.\");\r\n      $(\"#rePassword\").focus();\r\n      return;\r\n    }\r\n\r\n    if (signUpData.name === \"\") {\r\n      alert(\"이름을 입력해주세요.\");\r\n      $(\"#name\").focus();\r\n      return;\r\n    }\r\n\r\n    if (signUpData.password !== signUpData.rePassword) {\r\n      alert(\"비밀번호와 비밀번호 확인이 같지 않습니다.\");\r\n      setSignUpdata({\r\n        ...signUpData,\r\n        password: \"\",\r\n        rePassword: \"\",\r\n      });\r\n      $(\"#password\").focus();\r\n      return;\r\n    }\r\n\r\n    sendSignUpData()\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        alert(res.data.result);\r\n        window.location.reload();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        setErrorMessage(e.response.data.error);\r\n      });\r\n  };\r\n\r\n  const sendSignUpData = async () => {\r\n    return await axios.post(port.url + \"/user/signUp\", signUpData);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"py-5 text-center container\">\r\n        <div className=\"row py-lg-5\">\r\n          <div className=\"col-lg-6 col-md-8 mx-auto\">\r\n            <h1 className=\"fw-light\">Movie</h1>\r\n            <p className=\"lead text-muted\">\r\n              리뷰하고 싶은 영화를 추가하고, 별점을 주세요.\r\n              <br />\r\n              KAKAO SignUp Page\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"album\">\r\n        <div className=\"container\">\r\n          <form>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                type=\"email\"\r\n                ref={emailRef}\r\n                value={signUpData.email}\r\n                onChange={onChangeSignUpData}\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                aria-describedby=\"emailHelp\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                value={signUpData.password}\r\n                onChange={onChangeSignUpData}\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"rePassword\" className=\"form-label\">\r\n                Re-Password\r\n              </label>\r\n              <input\r\n                type=\"password\"\r\n                value={signUpData.rePassword}\r\n                onChange={onChangeSignUpData}\r\n                className=\"form-control\"\r\n                name=\"rePassword\"\r\n                id=\"rePassword\"\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label\">\r\n                Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={signUpData.name}\r\n                onChange={onChangeSignUpData}\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <p className=\"text-danger\">{errorMessage}</p>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClickSignUpButton}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              회원가입\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SocialSignUp;\r\n","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\user\\SignUpForm.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\user\\SignInForm.js",["132","133"],[],"import $ from \"jquery\";\r\nimport axios from \"axios\";\r\nimport port from \"./../../data/port.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst SignInForm = ({ signInData, onChangeSignInData }) => {\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const onClickLoginButton = () => {\r\n\r\n        if (signInData.email === \"\") {\r\n            alert(\"이메일을 입력해주세요.\");\r\n            $(\"#email\").focus();\r\n            return;\r\n        }\r\n\r\n        if (signInData.password === \"\") {\r\n            alert(\"비밀번호를 입력해주세요.\");\r\n            $(\"#password\").focus();\r\n            return;\r\n        }\r\n\r\n        sendSignInData().then(res => {\r\n            console.log(res);\r\n            setCookie(\"userData\", res.data, { path: \"/\" });\r\n            alert(\"로그인이 완료되었습니다.\");\r\n            navigate(\"/review/list\");\r\n        }).catch(e => {\r\n            console.log(e);\r\n            setErrorMessage(e.response.data.fail);\r\n        });\r\n    }\r\n\r\n    const sendSignInData = async () => {\r\n        return await axios.post(port.url + '/user/login', signInData);\r\n    }\r\n\r\n    return (\r\n        <div className=\"album\">\r\n            <div className=\"container\">\r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"email\" className=\"form-label\">Email address</label>\r\n                        <input type=\"email\" value={signInData.email} onChange={onChangeSignInData} className=\"form-control\" name=\"email\" id=\"email\" aria-describedby=\"emailHelp\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                        <input type=\"password\" value={signInData.password} onChange={onChangeSignInData} name=\"password\" className=\"form-control\" id=\"password\" />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <p className=\"text-danger\">\r\n                            {errorMessage}\r\n                        </p>\r\n                    </div>\r\n                    <button type=\"button\"\r\n                        onClick={onClickLoginButton}\r\n                        className=\"btn btn-primary\">로그인</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignInForm;","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\data\\keyInfo.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\review\\Create.js",["134","135"],[],"import { useEffect, useState } from \"react\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport $ from \"jquery\";\r\nimport axios from \"axios\";\r\nimport url from \"./../../data/port.json\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n\r\n    const [createReview, setCreateReview] = useState({\r\n        img: \"\",\r\n        title: \"\",\r\n        content: \"\",\r\n        email: cookies.userData.email\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(createReview);\r\n    }, [createReview]);\r\n\r\n    const onChangeCreateReview = (e) => {\r\n        setCreateReview({\r\n            ...createReview,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const onClickCreateReviewButton = () => {\r\n\r\n        if (createReview.img === \"\") {\r\n            alert(\"이미지 경로를 입력해주세요.\");\r\n            $(\"#img\").focus();\r\n            return;\r\n        }\r\n\r\n        if (createReview.title === \"\") {\r\n            alert(\"제목을 입력해주세요.\");\r\n            $(\"#title\").focus();\r\n            return;\r\n        }\r\n\r\n        if (createReview.content === \"\") {\r\n            alert(\"내용을 입력해주세요.\");\r\n            $(\"#content\").focus();\r\n            return;\r\n        }\r\n\r\n        sendCreateReview().then(res => {\r\n            console.log(res);\r\n            alert(res.data.result);\r\n            navigate(\"/review/list\");\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const sendCreateReview = async () => {\r\n        return await axios.post(url.url + \"/posts\", createReview, {\r\n            headers: {\r\n                accessToken: cookies.userData.accessToken\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"album\">\r\n            <div className=\"container\">\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-img-top\" style={{ textAlign: \"center\" }}>\r\n                        {\r\n                            createReview.img !== \"\" ? (<img src={createReview.img} alt=\"movie img\" />)\r\n                                : (<></>)\r\n                        }\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Movie Img</h5>\r\n                        <p className=\"card-text\">\r\n                            Img Example\r\n                        </p>\r\n                        <input type=\"text\" className=\"form-control\" name=\"img\" onChange={onChangeCreateReview} id=\"img\" placeholder=\"사진 URL을 입력해주세요.\" />\r\n                        <p className=\"card-text\"><small className=\"text-muted\">url...</small></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">제목</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={onChangeCreateReview} name=\"title\" id=\"title\" placeholder=\"제목을 입력해주세요.\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"content\" className=\"form-label\">내용</label>\r\n                    <textarea className=\"form-control\" onChange={onChangeCreateReview} name=\"content\" id=\"content\" rows=\"3\"></textarea>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\" style={{ marginRight: \"2%\" }} onClick={onClickCreateReviewButton}>생성</button>\r\n                <button type=\"button\" className=\"btn btn-outline-danger\">뒤로가기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Create;","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\app\\reducer\\Data.js",[],[],"C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\review\\Detail.js",["136","137","138"],[],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport url from \"./../../data/port.json\";\r\n\r\nconst Detail = () => {\r\n\r\n    const params = useParams();\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n\r\n    const [detailData, setDetailData] = useState({});\r\n\r\n    useEffect(() => {\r\n        // console.log(params.id);\r\n\r\n        findDetailData().then(res => {\r\n            // console.log(res);\r\n            setDetailData(res.data);\r\n        });\r\n\r\n    }, []);\r\n\r\n    const findDetailData = async () => {\r\n        return await axios.get(url.url + `/posts/${params.id}/find`, {\r\n            headers: {\r\n                accessToken: cookies.userData.accessToken\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"album\">\r\n            <div className=\"container\">\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-img-top\" style={{ textAlign: \"center\" }}>\r\n                        <img src={detailData.img}\r\n                            alt=\"...\" />\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Movie Img</h5>\r\n                        <p className=\"card-text\">\r\n                            Img Example\r\n                        </p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">{detailData.img}</small></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">제목</label>\r\n                    <div className=\"card\">\r\n                        <p className=\"card-body\">\r\n                            {detailData.title}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"content\" className=\"form-label\">내용</label>\r\n                    <div className=\"card\">\r\n                        <p className=\"card-body\">\r\n                            {detailData.content}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" onClick={() => {\r\n                    window.history.back();\r\n                }} className=\"btn btn-outline-danger\">뒤로가기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","C:\\Users\\he125\\OneDrive\\바탕 화면\\Dev\\Git\\Aihub_webTrack\\Learn\\week5\\Day2-4\\reactPr\\client\\src\\pages\\review\\Update.js",["139","140","141"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\nimport url from \"./../../data/port.json\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport $ from \"jquery\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Update = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const params = useParams();\r\n\r\n    const [cookies, setCookie, removeCookie] = useCookies([\"userData\"]);\r\n    const [updateData, setUpdateData] = useState({});\r\n\r\n    // let getReduxShortId = useSelector(state => state.id.value);\r\n\r\n    useEffect(() => {\r\n\r\n        findGetReviewData(params.id).then(res => {\r\n            console.log(res);\r\n            setUpdateData(res.data);\r\n        });\r\n\r\n    }, []);\r\n\r\n    const findGetReviewData = async () => {\r\n        return await axios.get(url.url + `/posts/${params.id}/find`, {\r\n            headers: {\r\n                accessToken: cookies.userData.accessToken\r\n            }\r\n        });\r\n    }\r\n\r\n    const onChangeUpdateData = (e) => {\r\n        setUpdateData({\r\n            ...updateData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    const onClickChangeUpdateData = () => {\r\n        if (updateData.img === \"\") {\r\n            alert(\"이미지 경로를 입력해주세요.\");\r\n            $(\"#img\").focus();\r\n            return;\r\n        }\r\n\r\n        if (updateData.title === \"\") {\r\n            alert(\"제목을 입력해주세요.\");\r\n            $(\"#title\").focus();\r\n            return;\r\n        }\r\n\r\n        if (updateData.content === \"\") {\r\n            alert(\"내용을 입력해주세요.\");\r\n            $(\"#content\").focus();\r\n            return;\r\n        }\r\n\r\n        sendUpdateData().then((res) => {\r\n            console.log(res);\r\n            alert(res.data.result);\r\n            navigate(\"/review/list\");\r\n        })\r\n\r\n    }\r\n\r\n    const sendUpdateData = async () => {\r\n        return await axios.post(url.url + `/posts/${params.id}/update`, updateData, {\r\n            headers: {\r\n                accessToken: cookies.userData.accessToken\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"album\">\r\n            <div className=\"container\">\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-img-top\" style={{ textAlign: \"center\" }}>\r\n                        <img src={updateData.img}\r\n                            alt=\"movie img\" />\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Movie Img</h5>\r\n                        <p className=\"card-text\">\r\n                            Img Example\r\n                        </p>\r\n                        <input type=\"text\" className=\"form-control\" defaultValue={updateData.img}\r\n                            onChange={onChangeUpdateData} name=\"img\" disabled\r\n                            id=\"img\" placeholder=\"사진 URL을 입력해주세요.\" />\r\n                        <p className=\"card-text\"><small className=\"text-muted\">url...</small></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">제목</label>\r\n                    <input type=\"text\" className=\"form-control\" defaultValue={updateData.title}\r\n                        onChange={onChangeUpdateData} name=\"title\"\r\n                        id=\"title\" placeholder=\"제목을 입력해주세요.\" />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"content\" className=\"form-label\">내용</label>\r\n                    <textarea className=\"form-control\" name=\"content\" defaultValue={updateData.content}\r\n                        onChange={onChangeUpdateData} id=\"content\"\r\n                        rows=\"3\"></textarea>\r\n                </div>\r\n                <button type=\"button\" className=\"btn btn-outline-primary\"\r\n                    onClick={onClickChangeUpdateData}\r\n                    style={{ marginRight: \"2%\" }}>수정</button>\r\n                <button type=\"button\" onClick={() => {\r\n                    window.history.back();\r\n                }} className=\"btn btn-outline-danger\">뒤로가기</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;",{"ruleId":"142","severity":1,"message":"143","line":6,"column":21,"nodeType":"144","endLine":6,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":10,"column":19,"nodeType":"147","messageId":"148","endLine":10,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":16,"column":6,"nodeType":"151","endLine":16,"endColumn":15,"suggestions":"152"},{"ruleId":"142","severity":1,"message":"143","line":43,"column":19,"nodeType":"144","endLine":43,"endColumn":54},{"ruleId":"142","severity":1,"message":"143","line":48,"column":19,"nodeType":"144","endLine":48,"endColumn":54},{"ruleId":"142","severity":1,"message":"143","line":53,"column":19,"nodeType":"144","endLine":53,"endColumn":54},{"ruleId":"153","severity":1,"message":"154","line":81,"column":23,"nodeType":"144","endLine":81,"endColumn":55},{"ruleId":"145","severity":1,"message":"146","line":16,"column":21,"nodeType":"147","messageId":"148","endLine":16,"endColumn":30},{"ruleId":"145","severity":1,"message":"155","line":16,"column":32,"nodeType":"147","messageId":"148","endLine":16,"endColumn":44},{"ruleId":"149","severity":1,"message":"156","line":31,"column":8,"nodeType":"151","endLine":31,"endColumn":10,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":134,"column":45,"nodeType":"144","endLine":138,"endColumn":69},{"ruleId":"142","severity":1,"message":"160","line":146,"column":49,"nodeType":"144","endLine":146,"endColumn":126},{"ruleId":"142","severity":1,"message":"160","line":175,"column":37,"nodeType":"144","endLine":176,"endColumn":90},{"ruleId":"142","severity":1,"message":"160","line":181,"column":37,"nodeType":"144","endLine":182,"endColumn":90},{"ruleId":"142","severity":1,"message":"160","line":189,"column":58,"nodeType":"144","endLine":189,"endColumn":128},{"ruleId":"142","severity":1,"message":"160","line":193,"column":37,"nodeType":"144","endLine":194,"endColumn":90},{"ruleId":"142","severity":1,"message":"160","line":199,"column":37,"nodeType":"144","endLine":200,"endColumn":90},{"ruleId":"145","severity":1,"message":"161","line":12,"column":10,"nodeType":"147","messageId":"148","endLine":12,"endColumn":21},{"ruleId":"145","severity":1,"message":"162","line":12,"column":23,"nodeType":"147","messageId":"148","endLine":12,"endColumn":36},{"ruleId":"145","severity":1,"message":"163","line":12,"column":38,"nodeType":"147","messageId":"148","endLine":12,"endColumn":54},{"ruleId":"145","severity":1,"message":"164","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":17},{"ruleId":"145","severity":1,"message":"155","line":13,"column":30,"nodeType":"147","messageId":"148","endLine":13,"endColumn":42},{"ruleId":"149","severity":1,"message":"165","line":41,"column":6,"nodeType":"151","endLine":41,"endColumn":8,"suggestions":"166"},{"ruleId":"145","severity":1,"message":"162","line":8,"column":23,"nodeType":"147","messageId":"148","endLine":8,"endColumn":36},{"ruleId":"145","severity":1,"message":"163","line":8,"column":38,"nodeType":"147","messageId":"148","endLine":8,"endColumn":54},{"ruleId":"149","severity":1,"message":"167","line":36,"column":6,"nodeType":"151","endLine":36,"endColumn":8,"suggestions":"168"},{"ruleId":"145","severity":1,"message":"164","line":11,"column":12,"nodeType":"147","messageId":"148","endLine":11,"endColumn":19},{"ruleId":"145","severity":1,"message":"155","line":11,"column":32,"nodeType":"147","messageId":"148","endLine":11,"endColumn":44},{"ruleId":"145","severity":1,"message":"146","line":12,"column":21,"nodeType":"147","messageId":"148","endLine":12,"endColumn":30},{"ruleId":"145","severity":1,"message":"155","line":12,"column":32,"nodeType":"147","messageId":"148","endLine":12,"endColumn":44},{"ruleId":"145","severity":1,"message":"146","line":11,"column":21,"nodeType":"147","messageId":"148","endLine":11,"endColumn":30},{"ruleId":"145","severity":1,"message":"155","line":11,"column":32,"nodeType":"147","messageId":"148","endLine":11,"endColumn":44},{"ruleId":"149","severity":1,"message":"169","line":23,"column":8,"nodeType":"151","endLine":23,"endColumn":10,"suggestions":"170"},{"ruleId":"145","severity":1,"message":"146","line":16,"column":21,"nodeType":"147","messageId":"148","endLine":16,"endColumn":30},{"ruleId":"145","severity":1,"message":"155","line":16,"column":32,"nodeType":"147","messageId":"148","endLine":16,"endColumn":44},{"ruleId":"149","severity":1,"message":"171","line":28,"column":8,"nodeType":"151","endLine":28,"endColumn":10,"suggestions":"172"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["173"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'removeCookie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getReviewData' and 'page.page'. Either include them or remove the dependency array.",["174"],"jsx-a11y/no-redundant-roles","The element img has an implicit role of img. Defining this explicitly is redundant and should be avoided.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'cookiesAuth' is assigned a value but never used.","'setCookieAuth' is assigned a value but never used.","'removeCookieAuth' is assigned a value but never used.","'cookies' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'KAKAO_PARAMS', 'navigate', 'sendCode', and 'setCookie'. Either include them or remove the dependency array.",["175"],"React Hook useEffect has missing dependencies: 'cookiesAuth.auth' and 'signUpData'. Either include them or remove the dependency array. You can also do a functional update 'setSignUpdata(s => ...)' if you only need 'signUpData' in the 'setSignUpdata' call.",["176"],"React Hook useEffect has a missing dependency: 'findDetailData'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has missing dependencies: 'findGetReviewData' and 'params.id'. Either include them or remove the dependency array.",["178"],{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [cookies, navigate]",{"range":"191","text":"192"},"Update the dependencies array to be: [getReviewData, page.page]",{"range":"193","text":"194"},"Update the dependencies array to be: [KAKAO_PARAMS, navigate, sendCode, setCookie]",{"range":"195","text":"196"},"Update the dependencies array to be: [cookiesAuth.auth, signUpData]",{"range":"197","text":"198"},"Update the dependencies array to be: [findDetailData]",{"range":"199","text":"200"},"Update the dependencies array to be: [findGetReviewData, params.id]",{"range":"201","text":"202"},[487,496],"[cookies, navigate]",[849,851],"[getReviewData, page.page]",[1159,1161],"[KAKAO_PARAMS, navigate, sendCode, setCookie]",[899,901],"[cookiesAuth.auth, signUpData]",[599,601],"[findDetailData]",[800,802],"[findGetReviewData, params.id]"]